---
- name: create blackbox_exporter system group
  group:
    name: blackbox-exp
    system: true
    state: present

- name: create blackbox_exporter system user
  user:
    name: blackbox-exp
    system: true
    shell: "/usr/sbin/nologin"
    group: blackbox-exp
    createhome: false

- block:
    - name: Get latest release
      uri:
        url: "https://api.github.com/repos/prometheus/blackbox_exporter/releases/latest"
        method: GET
        return_content: true
        status_code: 200
        body_format: json
        validate_certs: true
      no_log: false
      register: _latest_release
      until: _latest_release.status == 200
      retries: 5
      check_mode: false

    - name: "Set blackbox_exporter version to {{ _latest_release.json.tag_name[1:] }}"
      set_fact:
        blackbox_exporter_version: "{{ _latest_release.json.tag_name[1:] }}"
  when:
    - blackbox_exporter_version == "latest"

- name: "Get checksum list"
  set_fact:
    __blackbox_exporter_checksums: "{{ lookup('url', 'https://github.com/prometheus/blackbox_exporter/releases/download/v' + blackbox_exporter_version + '/sha256sums.txt', wantlist=True) | list }}"
  run_once: true
  check_mode: false
  delegate_to: localhost

- name: download blackbox_exporter binary to local folder
  become: false
  get_url:
    url: "https://github.com/prometheus/blackbox_exporter/releases/download/v{{ blackbox_exporter_version }}/blackbox_exporter-{{ blackbox_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "/tmp/blackbox_exporter-{{ blackbox_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    checksum: "sha256:{{ (__blackbox_exporter_checksums | select('search', 'linux-' + go_arch + '.tar.gz') | first).split()[0] }}"
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2
  # run_once: true # <-- this cannot be set due to multi-arch support
  delegate_to: localhost
  check_mode: false

- name: unpack blackbox_exporter binaries
  become: false
  unarchive:
    src: "/tmp/blackbox_exporter-{{ blackbox_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "/tmp"
    creates: "/tmp/blackbox_exporter-{{ blackbox_exporter_version }}.linux-{{ go_arch }}/blackbox_exporter"
  delegate_to: localhost
  check_mode: false

- name: propagate blackbox exporter binary
  copy:
    src: "/tmp/blackbox_exporter-{{ blackbox_exporter_version }}.linux-{{ go_arch }}/blackbox_exporter"
    dest: "/usr/local/bin/blackbox_exporter"
    mode: 0750
    owner: blackbox-exp
    group: blackbox-exp
  notify:
    - restart blackbox exporter

- name: Install libcap on Debian systems
  package:
    name: "libcap2-bin"
    state: present
  register: _download_packages
  until: _download_packages is succeeded
  retries: 5
  delay: 2
  when: ansible_os_family | lower == "debian"

- name: Ensure blackbox exporter binary has cap_net_raw capability
  capabilities:
    path: '/usr/local/bin/blackbox_exporter'
    capability: cap_net_raw+ep
    state: present
  when: not ansible_check_mode

- name: Check Debug Message
  debug:
    msg: "The capabilities module is skipped during check mode, as the file may not exist, causing execution to fail."
  when: ansible_check_mode
